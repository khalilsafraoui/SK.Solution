@using SK.Solution.Utility
@inherits LayoutComponentBase
@inject AuthenticationStateProvider _AuthenticationStateProvider
<div class="page">
    <AuthorizeView Roles="@RoleType.Admin">
       
        <div class="sidebar">
            <NavMenu />
            
        </div>
        
    </AuthorizeView>


    <main>
        @if (_navBarVisible)
        {
            <NavBar></NavBar>
            
        }
        <AuthorizeView Roles="@RoleType.Admin">
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>
        </AuthorizeView>
      

        
            @Body
       
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
@code {
    private bool _navBarVisible;
    protected override async Task OnInitializedAsync()
    {
        _navBarVisible = await ShowNavBar();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _navBarVisible = await ShowNavBar();
    }

    private async Task<bool> ShowNavBar()
    {
        var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var isAuthenticated = user.Identity is not null && user.Identity.IsAuthenticated;
        if (!isAuthenticated)
        {
            return true;
        }

        //Navbar should not be visible to admin
        if (!user.IsInRole(RoleType.Admin))
        {
            return true;
        }

        return false;
    }
}
