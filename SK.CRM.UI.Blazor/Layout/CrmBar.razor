@using MediatR
@using Microsoft.Extensions.Localization
@using SK.CRM.Application.Features.ShoppingCart.Queries
@using SK.CRM.UI.Blazor.Resources
@using SK.CRM.UI.Blazor.Services
@inject AuthenticationStateProvider _AuthenticationStateProvider
@inject SharedStateService _SharedStateService
@inject IMediator Mediator
@inject IStringLocalizer<CrmTextRessources> _localizer
@rendermode InteractiveServer
<li class="nav-item mx-2">
	<NavLink class="nav-link" href=@Routes.Crm_Cart>
		<span class="bi bi-cart3" aria-hidden="true"></span> @_localizer["Cart"] (@_SharedStateService.TotalCartCount)
	</NavLink>
</li>
<li class="nav-item mx-2">
	<NavLink class="nav-link" href=@Routes.Crm_Customer_Quotes>
		<span class="bi bi-card-list" aria-hidden="true"></span> @_localizer["Quotes_PageTitle"]
	</NavLink>
</li>
<li class="nav-item mx-2">
	<NavLink class="nav-link" href=@Routes.Crm_Customer_Orders>
		<span class="bi bi-card-list" aria-hidden="true"></span> @_localizer["Orders_PageTitle"]
	</NavLink>
</li>

@code {
	protected override void OnInitialized()
	{
		_SharedStateService.OnChange += OnSharedStateChange;
		GetInitialCount();
	}
	private void OnSharedStateChange()
	{
		InvokeAsync(StateHasChanged);
	}

	public async Task GetInitialCount()
	{
		var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;
		var query = new GetTotalCartCountQuery(user?.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value);
		_SharedStateService.TotalCartCount =
			await Mediator.Send(query);
		var test = _SharedStateService.TotalCartCount;
	}

	public void Dispose()
	{
		_SharedStateService.OnChange -= OnSharedStateChange;
	}

}
