@using Microsoft.Extensions.Localization
@using SK.CRM.Application.DTOs.Quote
@using SK.CRM.Application.Features.Quotes.Queries
@using SK.CRM.UI.Blazor.Resources
@attribute [Route(Routes.Crm_Quotes)]
@attribute [Authorize(Roles = RoleType.Crm_Manager + "," + RoleType.Crm_Viewer)]
@rendermode InteractiveServer
@inject IMediator Mediator
@inject NavigationManager _NavigationManager
@inject ILogger<Quotes> Logger
@inject IJSRuntime _IJSRuntime
@inject ICurrentUserService _CurrentUserService
@inject IStringLocalizer<CrmTextRessources> _localizer
@attribute [Authorize]
<PageTitle>@_localizer["Quotes_PageTitle"]</PageTitle>
@if (IsProcessing)
{
    <div class="position-absolute w-100 vh-100 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading">
    </div>
}
else
{
    <div class="container py-4">
        <div class="row justify-content-center mb-4">
            <div class="col-12 pt-1">
                <RadzenCard class="p-4 shadow radzen-card-responsive">
                    <div class="row align-items-center justify-content-between">

                        <!-- Left: Title -->
                        <div class="col-12 col-md-auto mb-2 mb-md-0 text-center text-md-start">
                            <h2 class="m-0 fw-bold" style="color: purple; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                                @_localizer["Quotes_Title"]
                            </h2>
                        </div>

                        <!-- Right: Create New Quote -->
                        <div class="col-12 col-md-auto d-flex justify-content-center justify-content-md-end">
                            <RadzenButton Text=@_localizer["Create"]
                            Icon="add_circle"
                            Style="min-width: 160px; background-color: purple; border-color: purple; color: white;"
                            ButtonStyle="ButtonStyle.Primary"
                            Click="@OnCreateNewQuote" />
                        </div>

                    </div>
                </RadzenCard>
            </div>

            <div class="col-12 col-md-12 pt-1">
                <RadzenCard Class="p-4 shadow radzen-card-responsive">
                    <RadzenTabs @bind-SelectedIndex=@selectedIndex Change="OnTabChange">
                        <Tabs>
                            <RadzenTabsItem Text=@_localizer["Active"]>
                                <RadzenDataGrid @ref="quotesGrid"
                                Data="@QuotesDto"
                                LoadData="@LoadActiveQuotes"
                                TItem="QuoteDto"
                                AllowFiltering="true"
                                AllowPaging="true"
                                PageSizeOptions="new int[] {5, 10, 20, 50}"
                                PageSize="10"
                                Count="@totalQuotesCount"
                                AllowSorting="true"
                                Responsive="true">

                                    <Columns>
                                        @*  <RadzenDataGridColumn Title="Id">
                                            <Template Context="quoteItem">@quoteItem.Id</Template>
                                        </RadzenDataGridColumn> *@

                                        <RadzenDataGridColumn Title=@_localizer["Customer"]>
                                            <Template Context="quoteItem">
                                                <div>
                                                    <strong>@quoteItem.FullName</strong><br />
                                                    <small class="text-muted">@quoteItem.FullAddress</small>
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Title=@_localizer["CreatedDate"]>
                                            <Template Context="quoteItem">@quoteItem.CreatedDate.ToString("d")</Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Title=@_localizer["Status"]>
                                            <Template Context="quoteItem">@quoteItem.Status</Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Title=@_localizer["ExpirationDate"]>
                                            <Template Context="quoteItem">@quoteItem.ExpirationDate?.ToString("d")</Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Title=@_localizer["Action"] Sortable="false" Filterable="false" Width="100px" TextAlign="TextAlign.Center">
                                            <Template Context="quote">
                                                <RadzenButton Shade="Shade.Lighter"
                                                              Text=@_localizer["Details"]
                                                Style="background-color: purple; border-color: purple; color: white;"
                                                ButtonStyle="ButtonStyle.Primary"
                                                Click="@(() => _NavigationManager.NavigateTo(Routes.GetQuoteDetailsUrl(quote.Id)))" />
                                            </Template>
                                        </RadzenDataGridColumn>
                                    </Columns>

                                    <!-- Empty state -->
                                    <EmptyTemplate>
                                        <div class="text-center text-muted p-4">
                                            @_localizer["Quotes_NoQuotesToDisplay"]
                                        </div>
                                    </EmptyTemplate>

                                </RadzenDataGrid>
                            </RadzenTabsItem>
                            <RadzenTabsItem Text=@_localizer["Completed"]>

                                <RadzenDataGrid @ref="completedquotesGrid"
                                Data="@CompletedQuotesDto"
                                LoadData="@LoadCompletedQuotes"
                                TItem="QuoteDto"
                                AllowFiltering="true"
                                AllowPaging="true"
                                PageSizeOptions="new int[] {5, 10, 20, 50}"
                                PageSize="10"
                                Count="@totalCompletedQuotesCount"
                                AllowSorting="true"
                                Responsive="true">

                                    <Columns>
                                        <RadzenDataGridColumn Title=@_localizer["Customer"]>
                                            <Template Context="quoteItem">
                                                <div>
                                                    <strong>@quoteItem.FullName</strong><br />
                                                    <small class="text-muted">@quoteItem.FullAddress</small>
                                                </div>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Title=@_localizer["CreatedDate"]>
                                            <Template Context="quoteItem">@quoteItem.CreatedDate.ToString("d")</Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Title=@_localizer["Status"]>
                                            <Template Context="quoteItem">@quoteItem.Status</Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Title=@_localizer["Action"] Sortable="false" Filterable="false" Width="100px" TextAlign="TextAlign.Center">
                                            <Template Context="quote">
                                                <RadzenButton Shade="Shade.Lighter"
                                                              Text=@_localizer["Details"]
                                                ButtonStyle="ButtonStyle.Primary"
                                                Click="@(() => _NavigationManager.NavigateTo(Routes.GetQuoteDetailsUrl(quote.Id)))" />
                                            </Template>
                                        </RadzenDataGridColumn>
                                    </Columns>

                                    <!-- Empty state -->
                                    <EmptyTemplate>
                                        <div class="text-center text-muted p-4">
                                            @_localizer["Quotes_NoQuotesToDisplay"]
                                        </div>
                                    </EmptyTemplate>

                                </RadzenDataGrid>

                            </RadzenTabsItem>
                        </Tabs>
                    </RadzenTabs>

                </RadzenCard>

            </div>

        </div>
    </div>
}

@code {
    public bool IsProcessing { get; set; } = false;
    int selectedIndex = 0;
    int totalQuotesCount = 0;
    int totalCompletedQuotesCount = 0;
    private bool shouldReloadSecondGrid = false;
    private IEnumerable<QuoteDto> QuotesDto { get; set; } = new List<QuoteDto>();
    private IEnumerable<QuoteDto> CompletedQuotesDto { get; set; } = new List<QuoteDto>();
    RadzenDataGrid<QuoteDto> quotesGrid;
    RadzenDataGrid<QuoteDto> completedquotesGrid;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await quotesGrid.Reload();

            StateHasChanged();
        }

        if (shouldReloadSecondGrid)
        {
            await completedquotesGrid.Reload();
            shouldReloadSecondGrid = false;
            StateHasChanged();
        }
    }

    private async Task LoadActiveQuotes(LoadDataArgs arg)
    {
        int pageSize = arg.Top ?? 10; // default to 10 if null
        int skip = arg.Skip ?? 0;
        int pageIndex = skip / pageSize;
        var query = new GetAllQuotesByStatusQuery(new[] { QuoteStatus.StatusAccepted, QuoteStatus.StatusQuoted, QuoteStatus.StatusSubmitted, QuoteStatus.StatusUnderReview, QuoteStatus.StatusDraft }, pageIndex, pageSize);
        var result = await Mediator.Send(query);
        if (result.IsSuccess)
        {
            QuotesDto = result.QuotesDto;
            totalQuotesCount = result.TotalCount;
            StateHasChanged();
        }
        else
        {
            Logger.LogError("Failed to load quotes: {Error}", result.ErrorMessage);
            await _IJSRuntime.ToastrError("Failed to load quotes. Please try again later.");
        }
    }

    private async Task LoadCompletedQuotes(LoadDataArgs arg)
    {
        int pageSize = arg.Top ?? 10; // default to 10 if null
        int skip = arg.Skip ?? 0;
        int pageIndex = skip / pageSize;
        var query = new GetAllQuotesByStatusQuery(new[] { QuoteStatus.StatusExpired, QuoteStatus.StatusCancelled, QuoteStatus.StatusCompleted }, pageIndex, pageSize);
        var result = await Mediator.Send(query);
        if (result.IsSuccess)
        {
            CompletedQuotesDto = result.QuotesDto;
            totalCompletedQuotesCount = result.TotalCount;
            StateHasChanged();
        }
        else
        {
            Logger.LogError("Failed to load quotes: {Error}", result.ErrorMessage);
            await _IJSRuntime.ToastrError("Failed to load quotes. Please try again later.");
        }
    }

    async Task OnCreateNewQuote()
    {
        _NavigationManager.NavigateTo(Routes.Crm_Quote_Create);
    }

    private async Task OnTabChange(int index)
    {
        if (index == 1)
        {
            shouldReloadSecondGrid = true;
        }
    }

}

