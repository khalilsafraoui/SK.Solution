@attribute [Route(Routes.Crm_Customer_Create)]
@attribute [Route(Routes.Crm_Customer_Edit)]
@rendermode InteractiveServer
@inject IMediator Mediator
@inject NavigationManager _NavigationManager
@inject IJSRuntime _IJSRuntime

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading">
    </div>
}
else
{

    <div class="rz-m-6">
        <RadzenBreadCrumb>
            <RadzenBreadCrumbItem Path=@Routes.Crm_Customers Text="Customers" />
            <RadzenBreadCrumbItem Icon="add" Text=@(Id != null ? "Edit" : "Add") />
        </RadzenBreadCrumb>
    </div>
    <div class="card shadow border-0 m-4">

        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2"> @(Id != null ? "Edit" : "Add") Customer</h2>
                </div>
            </div>
        </div>

        <div class="card-body p-4">
           

            <RadzenTabs Change=@OnChange TabPosition="TabPosition.Left" RenderMode="TabRenderMode.Client">
                <Tabs>
                    <RadzenTabsItem Text="General Informations">
                        <_CustomerGeneralInformations CustomerId="@Id"></_CustomerGeneralInformations>
                        
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Addresses" Disabled="@(string.IsNullOrWhiteSpace(Id))">
                        <_CustomerAddresses CustomerId="@Id"></_CustomerAddresses>
                    </RadzenTabsItem>
                    
                </Tabs>
            </RadzenTabs>

        </div>

    </div>
}

@code {
    [Parameter]
    public string? Id { get; set; }



    public bool IsProcessing { get; set; } = false;
    
    
   

    private void OnChange()
    {
      
    }

    private async Task CanChange(StepsCanChangeEventArgs args)
    {
       
    }

   
}
