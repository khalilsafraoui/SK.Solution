@attribute [Route(Routes.Inventory_products)]
@rendermode InteractiveServer
@inject IMediator Mediator
@inject NavigationManager _NavigationManager
@inject IJSRuntime _IJSRuntime

<BsModal OnModalConfirmation="ConfirmDelete_Click"
    ButtonBootsrapStyle="btn-danger"
    ButtonText="Delete"
    Title="Are you sure you want to delete this Product?">
</BsModal>

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading">
    </div>
}
else
{
    <div class="card shadow border-0 m-4">

        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2"> Product List</h2>
                </div>
            </div>
        </div>

        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href=@Routes.Inventory_Product_Create class="btn btn-lg btn-secondary" style="width:250px"><i class="bi bi-plus-square"></i> Add New Product</a>
                </div>
            </div>
            @if (Products.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Special Tag</th>
                            <th>Category</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cat in Products)
                        {
                            <tr>
                                <td> @cat.Id</td>
                                <td> @cat.Name</td>
                                <td> @cat.Price.ToString("C",CultureInfo.GetCultureInfo("en-us"))</td>
                                <td><span class="badge text-bg-info"> @cat.SpecialTag</span></td>
                                <td> @cat.Category.Name</td>
                                <td>
                                    <a href=@Routes.GetProductEditUrl(cat.Id) class="btn btn-primary"> <i class="bi bi-pencil-square"></i> Edit</a>
                                    <button class="btn btn-danger" @onclick="()=>HandleDelete(cat.Id)"> <i class="bi bi-trash3"></i> Delete</button>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            }
        </div>

    </div>
}

@code {
    public bool IsProcessing { get; set; } = true;
    private IEnumerable<ProductDto> Products { get; set; } = new List<ProductDto>();
    private int DeleteProductID { get; set; } = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await LoadProducts();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadProducts()
    {
        var query = new GetAllProductsQuery();
        Products = await Mediator.Send(query);
    }

    private async Task HandleDelete(int id)
    {
        DeleteProductID = id;
        await _IJSRuntime.InvokeVoidAsync("ShowConfirmationModal");
    }

    private async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        await _IJSRuntime.InvokeVoidAsync("HideConfirmationModal");
        if(isConfirmed && DeleteProductID != 0)
        {
            var query = new DeleteProductCommand(DeleteProductID);
            var result = await Mediator.Send(query);
            if(result)
            {
                await _IJSRuntime.ToastrSuccess("Product Delete Successfully");
            }
            else
            {
                await _IJSRuntime.ToastrError("Product Delete InSuccessfully");
            }
            await LoadProducts();
           
        }
        DeleteProductID = 0;
        IsProcessing = false;
    }
}
